# Generated by Django 3.2.7 on 2021-11-19 22:06

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Almacen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cod_movimiento', models.IntegerField()),
                ('tipo_movimiento', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Contratistas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_contratista', models.IntegerField()),
                ('nombre_contratista', models.CharField(max_length=50)),
                ('direccion_contratista', models.CharField(max_length=100)),
                ('correo_contratista', models.CharField(max_length=50)),
                ('telefono_contratista', models.IntegerField()),
                ('especialidad_contratista', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Empleados',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_empleado', models.IntegerField()),
                ('nombre_empleado', models.CharField(max_length=50)),
                ('apellido_empleado', models.CharField(max_length=50)),
                ('cargo_empleado', models.CharField(max_length=50)),
                ('telefono_empleado', models.IntegerField()),
                ('correo_empleado', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Facturas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_factura', models.IntegerField()),
                ('fecha_factura', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Materia_prima',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_producto', models.IntegerField()),
                ('nombre_producto', models.CharField(max_length=100)),
                ('cantidad_almacen', models.IntegerField()),
                ('cantidad_minima', models.IntegerField()),
                ('unidad_de_medida', models.CharField(max_length=15)),
                ('seccion_ubicacion_material', models.CharField(max_length=50)),
                ('precio', models.IntegerField()),
                ('orden_pedido', models.IntegerField()),
                ('Almacen_cod_movimiento', models.IntegerField()),
                ('Proveedores_cod_proveedor', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Ordenes_pedido_materiaprima',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_orden_pedido', models.IntegerField()),
                ('codigo_producto', models.IntegerField()),
                ('cantidad_pedida', models.IntegerField()),
                ('fecha_orden_pedido', models.DateTimeField(auto_now_add=True)),
                ('proveedores_codigo', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Ordenes_salida_materiaprima',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_orden_salida', models.IntegerField()),
                ('codigo_producto', models.IntegerField()),
                ('cantidad_entregada', models.ImageField(upload_to='')),
                ('fecha_entrega_materiaprima', models.DateTimeField(auto_now_add=True)),
                ('proyecto_destino', models.IntegerField()),
                ('codigo_movimiento', models.IntegerField()),
                ('empleado_responsable', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Proveedores',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_proveedor', models.IntegerField()),
                ('nombre_proveedor', models.CharField(max_length=50)),
                ('direccion_proveedor', models.CharField(max_length=100)),
                ('barrio_proveedor', models.CharField(max_length=50)),
                ('ciudad_proveedor', models.CharField(max_length=50)),
                ('telefono_proveedor', models.IntegerField()),
                ('website_proveedor', models.CharField(max_length=50)),
                ('maneja_credito', models.CharField(max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Proyectos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_proyecto', models.IntegerField()),
                ('direccion_proyecto', models.CharField(max_length=100)),
                ('descripcion_proyecto', models.CharField(max_length=200)),
                ('empleado_responsable', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('codigo_empleado', models.BigIntegerField(default='0123456789')),
                ('cargo_empleado', models.CharField(default='---------------', max_length=50)),
                ('telefono_empleado', models.BigIntegerField()),
                ('correo_empleado', models.CharField(default='empleado@ejemplo.com', max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
